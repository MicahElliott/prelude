(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#3F3F3F" "#CC9393" "#7F9F7F" "#F0DFAF" "#8CD0D3" "#DC8CC3" "#93E0E3" "#DCDCCC"])
 '(avy-case-fold-search nil)
 '(beacon-blink-duration 0.4)
 '(beacon-blink-when-focused t)
 '(beacon-blink-when-point-moves-vertically 5)
 '(beacon-color "red")
 '(beacon-push-mark nil)
 '(blink-cursor-blinks 2)
 '(blink-cursor-interval 0.2)
 '(blink-cursor-mode t)
 '(bookmark-default-file "/home/mde/.emacs.d/savefile/bookmarks")
 '(browse-url-browser-function (quote browse-url-firefox))
 '(browse-url-firefox-program "/Applications/Firefox.app/Contents/MacOS/firefox")
 '(cider-special-mode-truncate-lines nil)
 '(cljr-favor-private-functions nil)
 '(cljr-hotload-dependencies t)
 '(cljr-magic-require-namespaces
   (quote
    (("io" . "clojure.java.io")
     ("set" . "clojure.set")
     ("str" . "clojure.string")
     ("walk" . "clojure.walk")
     ("zip" . "clojure.zip")
     ("json" . "cheshire.core")
     ("xml" . "clojure.data.xml")
     ("as" . "clojure.core.async")
     ("mat" . "clojure.core.matrix")
     ("edn" . "clojure.edn")
     ("pp" . "clojure.pprint")
     ("spec" . "clojure.spec.alpha")
     ("csv" . "clojure.data.csv")
     ("time" . "java-time")
     ("spr" . "com.rpl.specter")
     ("http" . "clj-http.client")
     ("log" . "clojure.tools.logging")
     ("e" . "taoensso.encore")
     ("s3" . "amazonica.aws.s3")
     ("sql" . "hugsql.core")
     ("yaml" . "clj-yaml.core")
     ("sh" . "clojure.java.shell")
     ("w" . "clojure.walk")
     ("fs" . "me.raynes.fs"))))
 '(company-emoji-aliases
   (quote
    ((:woman_man_holding_hands: . ":couple:")
     (:bento: . ":gm-bento:")
     (:hankey: . ":gm-hankey:")
     (:bug: . ":gm-bug:")
     (:memo: . ":gmmemo:"))))
 '(cursor-type (quote (bar . 2)))
 '(custom-safe-themes
   (quote
    ("708df3cbb25425ccbf077a6e6f014dc3588faba968c90b74097d11177b711ad1" default)))
 '(fci-rule-color "#383838")
 '(flycheck-pycheckers-checkers (quote (pylint pep8 pyflakes bandit)))
 '(global-superword-mode t)
 '(global-yascroll-bar-mode t)
 '(helm-ag-always-set-extra-option t)
 '(helm-ag-ignore-patterns (quote ("vendor/")))
 '(helm-ag-use-agignore t)
 '(helm-ff-search-library-in-sexp t)
 '(helm-projectile-fuzzy-match t)
 '(helm-window-prefer-horizontal-split t)
 '(hl-paren-colors (quote ("red" "IndianRed1" "IndianRed3" "IndianRed4")))
 '(hl-paren-delay 0)
 '(ido-default-file-method (quote selected-window))
 '(inhibit-startup-screen nil)
 '(magit-log-arguments (quote ("--graph" "--color" "--decorate" "--stat" "-n10")))
 '(markdown-header-scaling t)
 '(markdown-wiki-link-search-subdirectories t)
 '(neo-show-hidden-files t)
 '(neo-theme (quote icons) t)
 '(neo-window-position (quote right))
 '(neo-window-width 40)
 '(nrepl-message-colors
   (quote
    ("#CC9393" "#DFAF8F" "#F0DFAF" "#7F9F7F" "#BFEBBF" "#93E0E3" "#94BFF3" "#DC8CC3")))
 '(org-agenda-files (quote ("~/proj/woodpecker/preso/osb.org")))
 '(package-selected-packages
   (quote
    (compact-docstrings helm-descbinds git-msg-prefix dumb-jump org-preview-html mo-git-blame forge magit-circleci github-review github-pullrequest github-browse-file git-link lsp-dart dart-mode scss-mode pyenv-mode-auto pyenv-mode ob-clojurescript ob-clojure epoch-view epochview uuidgen all-the-icons-dired flycheck-clj-kondo git-gutter xpm know-your-http-well paradox fringe-current-line git-gutter-fringe treemacs-projectile treemacs-magit treemacs-icons-dired treemacs mode-icons major-mode-icons go-mode json-reformat nav yasnippet groovy-mode cljr-helm sotclojure emidje flycheck-joker clj-comment comment-tags qpipenv pippel highlight-quoted highlight cider-eval-sexp-fu pytest python-pytest importmagic ein flycheck-pycheckers pylint py-autopep8 pipenv helm-emmet company-web emmet-mode graphql-mode zencoding-mode discover-clj-refactor clj-refactor restclient-test restclient-helm company-restclient edit-indirect swagger-to-org git-messenger browse-at-remote lorem-ipsum auto-dim-other-buffers emojify emoji-cheat-sheet-plus emoji-cheat-sheet company-emoji ac-emoji flycheck-status-emoji flymd company-flx string-inflection highlight-parentheses pos-tip multiple-cursors parinfer counsel cucumber-goto-step feature-mode ac-octave nginx-mode rjsx-mode inf-clojure highlight-numbers company-jedi elpy fontawesome org-bullets org-tree-slide epresent htmlize ox-reveal command-log-mode smart-comment hide-comnt fic-mode monroe docker dockerfile-mode docker-mode intero protobuf-mode pkgbuild-mode typo typopunct centered-cursor-mode speed-type sublimity-scroll yascroll smart-mode-line-powerline-theme dashboard elfeed crosshairs hiwin monokai-theme flymake-puppet puppet-mode wrap-region focus zlc bash-completion ansible-doc ansible idle-highlight-mode f sx prelude-helm-everywhere dired+ langtool pretty-mode clojure-mode-extra-font-locking jump-char flycheck-tip flycheck-pos-tip kibit-helper slamhound helm-clojuredocs flycheck-clojure col-highlight origami hideshowvis ghc flymake-hlint haskell-mode corral flymake-coffee coffee-mode all-the-icons neotree zop-to-char yari yaml-mode which-key web-mode volatile-highlights visible-mark utop unfill undo-tree tuareg toggle-quotes tangotango-theme smex smartrep smartparens smart-mode-line shrink-whitespace show-marks ruby-tools rubocop rinari relative-line-numbers rainbow-mode rainbow-delimiters ov org-journal operate-on-number multi-term multi-eshell move-text markdown-mode mark-tools magit livescript-mode linum-relative key-chord json-mode imenu-anywhere ido-ubiquitous helm-projectile helm-cider helm-ag haml-mode guru-mode guide-key grizzl god-mode gitignore-mode github-issues gitconfig-mode git-timemachine gist geiser flycheck-ocaml flx-ido floobits expand-region exec-path-from-shell esh-help elisp-slime-nav easy-kill dot-mode discover-my-major diminish diff-hl cycle-quotes csv-mode crux crontab-mode company-quickhelp company-ansible comment-dwim-2 clojure-snippets clojure-cheatsheet clippy chruby buffer-move browse-kill-ring bm beacon anzu adoc-mode ace-window ac-cider)))
 '(paradox-automatically-star t)
 '(paradox-github-token t)
 '(prelude-global-mode t)
 '(prelude-theme (quote monokai))
 '(prelude-whitespace t)
 '(projectile-enable-caching t)
 '(projectile-file-exists-remote-cache-expire nil)
 '(projectile-globally-ignored-directories
   (quote
    (".idea" ".ensime_cache" ".eunit" ".git" ".hg" ".fslckout" "_FOSSIL_" ".bzr" "_darcs" ".tox" ".svn" ".stack-work" "vendor")))
 '(projectile-indexing-method (quote hybrid))
 '(projectile-mode t nil (projectile))
 '(projectile-sort-order (quote recently-active))
 '(projectile-switch-project-action (quote helm-projectile-find-file))
 '(safe-local-variable-values
   (quote
    ((cider-lein-global-options . "with-profile +dev,+test")
     (scss-mode
      (css-indent-offset . 2)))))
 '(scroll-bar-mode nil)
 '(search-whitespace-regexp "\"[ \\t\\r\\n]+\"")
 '(standard-indent 2)
 '(text-scale-mode-step 1.1)
 '(tramp-default-method "ssh" nil (tramp))
 '(vc-annotate-background "#2B2B2B")
 '(vc-annotate-color-map
   (quote
    ((20 . "#BC8383")
     (40 . "#CC9393")
     (60 . "#DFAF8F")
     (80 . "#D0BF8F")
     (100 . "#E0CF9F")
     (120 . "#F0DFAF")
     (140 . "#5F7F5F")
     (160 . "#7F9F7F")
     (180 . "#8FB28F")
     (200 . "#9FC59F")
     (220 . "#AFD8AF")
     (240 . "#BFEBBF")
     (260 . "#93E0E3")
     (280 . "#6CA0A3")
     (300 . "#7CB8BB")
     (320 . "#8CD0D3")
     (340 . "#94BFF3")
     (360 . "#DC8CC3"))))
 '(vc-annotate-very-old-color "#DC8CC3")
 '(which-key-max-description-length 45)
 '(yascroll:delay-to-hide nil)
 '(yascroll:scroll-bar (quote (right-fringe left-fringe text-area))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "#002b36" :foreground "#F8F8F2" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 110 :width normal :foundry "nil" :family "Aller"))))
 '(bold ((t (:weight bold :family "Aller Display"))))
 '(cursor ((t (:background "red" :foreground "#272822" :inverse-video t))))
 '(fixed-pitch ((t (:family "Fantasque Sans Mono"))))
 '(font-lock-comment-delimiter-face ((t (:foreground "#75715E"))))
 '(font-lock-comment-face ((t (:foreground "#75715E" :family "Delius"))))
 '(font-lock-doc-face ((t (:foreground "dodger blue" :family "Aller"))))
 '(font-lock-function-name-face ((t (:foreground "#A6E22E" :underline t :weight ultra-bold))))
 '(font-lock-type-face ((t (:foreground "#66D9EF" :slant italic :weight bold))))
 '(idle-highlight ((t (:background "blue"))))
 '(lazy-highlight ((t (:inherit highlight :background "dark orange" :foreground "black" :weight bold))))
 '(magit-blame-hash ((t (:background "#2B2B2B" :foreground "#6CA0A3" :family "Fantasque Sans Mono"))) t)
 '(magit-log-graph ((t (:foreground "#75715E" :family "Fantasque Sans Mono"))))
 '(magit-section-heading ((t (:foreground "#F0DFAF" :weight bold :height 1.4 :family "Aller Display"))))
 '(magit-section-highlight ((t (:background "#494949"))))
 '(markdown-header-delimiter-face ((t (:inherit markdown-markup-face))))
 '(markdown-header-face ((t (:foreground "#A6E22E" :family "Aller Display"))))
 '(markdown-header-face-1 ((t (:inherit markdown-header-face :weight bold :height 1.3))))
 '(markdown-header-face-2 ((t (:inherit markdown-header-face :weight bold :height 1.2))))
 '(markdown-header-face-4 ((t (:inherit markdown-header-face :slant italic :height 1.0))))
 '(markdown-italic-face ((t (:inherit italic :slant italic))))
 '(minibuffer-prompt ((t (:foreground "#66D9EF" :family "Fantasque Sans Mono"))))
 '(mode-line ((t (:box (:line-width 2 :color "blue")))))
 '(org-block ((t (:background "#3E3D31" :foreground "#F8F8F0" :family "Fantasque Sans Mono"))))
 '(org-code ((t (:foreground "#75715E" :family "Fantasque Sans Mono"))))
 '(org-level-1 ((t (:inherit default :foreground "#FD971F" :height 1.3 :family "Aller Display"))))
 '(org-level-2 ((t (:inherit default :foreground "#A6E22E" :height 1.2 :family "Aller Display"))))
 '(org-level-3 ((t (:inherit default :foreground "#66D9EF" :height 1.15 :family "Aller Display"))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "dark orange" :weight bold))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "deep pink" :weight bold))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "chartreuse" :weight bold))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "deep sky blue" :weight bold))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "yellow" :weight bold))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "orchid" :weight bold))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "spring green" :weight bold))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "sienna1" :weight bold))))
 '(region ((t (:inherit highlight :background "slate blue"))))
 '(term ((t (:inherit default :family "Fantasque Sans Mono"))))
 '(which-key-command-description-face ((t (:foreground "#F8F8F2" :family "Fantasque Sans Mono"))))
 '(which-key-docstring-face ((t (:inherit which-key-note-face :family "Fantasque Sans Mono"))))
 '(which-key-group-description-face ((t (:foreground "#F92672" :weight bold :family "Fantasque Sans Mono"))))
 '(which-key-key-face ((t (:foreground "#A6E22E" :weight bold :family "Fantasque Sans Mono"))))
 '(which-key-local-map-description-face ((t (:foreground "#FFFACE" :family "Fantasque Sans Mono")))))
